import collections
import datetime as dt  
import pytz

def old_get_bonus_dict(text):
    dict = {}
    text = text.replace('\t',' ')
    list = text.split('\n')
    
    for line in list:
        line_list = line.split(' ')
        checkTime = dt.date(line_list[0]) 
        if len(line_list) > 11:
            if line_list[11] == 'בוצעה':
                bonus = get_bonus(int(line_list[8]))
                add_to_dict(dict, bonus, True)
                    
            elif line_list[10] == 'זוכתה':
                bonus = get_bonus(int(line_list[7]))
                add_to_dict(dict, bonus, False)
                
    dict = collections.OrderedDict(sorted(dict.items()))
    return dict
    
    
def get_datetime(line_list):
    time = line_list[0].split(':')
    date = line_list[1].split('/')
    date = ['20' + date[2], date[1], date[0]]
    
    datetime = date + time
    check_dt = dt.datetime(*[int(x) for x in datetime],tzinfo=pytz.timezone('Etc/GMT-2'))
    return check_dt
    
def dt_to_str(dt):
    return dt.strftime('%m/%d %H:%M')
    
def get_bonus_dict(text, start_time, end_dt = dt.datetime.now(pytz.timezone('Etc/GMT-2'))):
    #setup start datetime
    start_dt = dt.datetime.combine(end_dt.date(), start_time,pytz.timezone('Etc/GMT-2'))
    if end_dt.time() < start_time:
        start_dt -= dt.timedelta(days=1)
    
    
    print('timerange:\n{} -----> {}'.format(dt_to_str(start_dt), dt_to_str(end_dt)))
    
    dict = {}
    text = text.replace('\t',' ')
    list = text.split('\n')
    
    for line in list:
        line_list = line.split(' ')

        if len(line_list) > 11:
            if line_list[11] == 'בוצעה':
                check_dt = get_datetime(line_list)
                
                if is_dt_between_time_period(start_dt, end_dt, check_dt):
                    bonus = get_bonus(int(line_list[8]))
                    add_to_dict(dict, bonus, True)
            elif line_list[10] == 'זוכתה':
                if is_dt_between_time_period(start_dt, end_dt, check_dt):
                    bonus = get_bonus(int(line_list[7]))
                    add_to_dict(dict, bonus, False)
                
    dict = collections.OrderedDict(sorted(dict.items()))
    return dict


def print_dict(dict, is_terminal_1 = False):
    print()
    sum = 0
    for k, v in dict.items():
        sum += k * v
        print('{}: {}'.format(k, v))
    if is_terminal_1:
        sum *= 3
    print()
    print(sum, 'NIS')


def print_dict2(dict):
    key = dict.keys()
   # keys = '    '.join(key)
    print(key)
    
    
def add_to_dict(dict, bonus, is_add):
    if bonus != 0:
        if bonus not in dict:
            dict[bonus] = 0
        dict[bonus] += 1 if is_add else -1
    
    
def get_bonus(price):
    switcher = {
        0:0,
        40:0,
        41:0,
        59:1,
        79:2,
        80:2,
        89:1,
        100:0,
        129:2,
        130:2,
        139:3,
        136:3,
        140:3,
        155:4,
        160:4,
        190:5,
        212:7,
        220:7,
        222:7,
        229:7,
        289:8,
        299:8,
        
        
        170:1,
        171:1,
        200:4,
        205:4,
        
        186:1,
        269:3,
        285:5,
        
        262:1,
        376:4,
        414:7
    }
    if price in switcher:
        return switcher[price]
    else:
        print(price,'price not found')
        return 0


def is_dt_between_time_period(start_dt, end_dt, check_dt): 
    return start_dt <= check_dt <= end_dt


def main():
    str_time = input('enter start time: xx:xx\n')
    if '.' in str_time:
        str_time = str_time.split('.')
    else:
        str_time = str.time.split(':')
    
    start_time = dt.time(int(str_time[0]),int(str_time[1]),0)
    is_terminal_1 = False
    txt = """
    from here
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    till here
    """
    
    dict = get_bonus_dict(txt, start_time)
    print_dict(dict, is_terminal_1)


if __name__ == '__main__':
    main()
